/*最长连续递增序列*/
/*给定一个未经排序的整数数组，找到最长且 连续递增的子序列，并返回该序列的长度。
连续递增的子序列 可以由两个下标 l 和 r（l < r）确定，
如果对于每个 l <= i < r，都有 nums[i] < nums[i + 1] ，
那么子序列 [nums[l], nums[l + 1], ..., nums[r - 1], nums[r]] 就是连续递增子序列。
*/
#include <iostream>
#include <vector>

using namespace std;

int findLengthOfLCIS(vector<int>& nums) {
    //记录子序列开始索引
    int l = 0;
    //子序列长度
    int cnt = 1;
    int cntMax = 1;
    while (l != nums.size() - 1) {
        if(nums[l] < nums[l + 1]){
            ++cnt;
            if(cnt > cntMax){
                cntMax = cnt;
            }
        }else {
            cnt = 1;
        }
        ++l;
    }
    return cntMax;
}

int main(){

    return 0;
}